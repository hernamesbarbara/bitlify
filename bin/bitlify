#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""bitlify

Usage:
  bitlify <url_file>

Arguments:
  url_file     The CSV file containing URLs to be shortened.
  
Options:
  -h --help    Show this screen.

"""
from bitlyutils import *

__version__ = '0.1.0'
__author__ = "austin"
__license__ = "MIT"

# Reading Bitly access token from the file
with open(os.path.expanduser('~/.bitly'), 'r') as f:
    ACCESS_TOKEN = f.read().strip()

def main(args):
    df = pd.read_csv(args['<url_file>'])
    df.columns = [col.lower() for col in df.columns]
    results = []
    docs = df.to_dict(orient='records')

    for i, doc in enumerate(docs):
        res = {}
        print(f"{i+1} of {len(df)}")
        res = shorten_url(doc['url'], doc['title'])
        data = res.json()
        if data.get('id'):
            domain = data['id'].split('/')[0]
            if doc.get('backhalf'):
                res_custom_short_url = customize_short_url_back_half(data['id'], domain+'/'+doc['backhalf'])
                if res_custom_short_url and res_custom_short_url.status_code == 200:
                    if res_custom_short_url.json().get('custom_bitlink'):
                        data['short_url'] = res_custom_short_url.json()['custom_bitlink']
            else:
                data['short_url'] = data['link']
        print(f"{doc.get('title')} => {data['short_url']}")
        results.append(data)

    df_out = pd.DataFrame(results)
    df_out.to_csv('output.csv', index=False, encoding='utf-8')

    print()
    print('done and done')
    print('*'*40+'\n')

if __name__ == "__main__":
    arguments = docopt(__doc__)
    main(arguments)