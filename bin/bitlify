#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""bitlify

Usage:
  bitlify --csv=CSV [--outfile=OUTFILE]
  bitlify URL [--title=TITLE] [--backhalf=BACKHALF] [--outfile=OUTFILE]
  bitlify -H | --help

Arguments:
    URL                               URL to shorten.
    -C CSV --csv=CSV                  CSV rows with urls to shorten and cols: url,title,backhalf.
    -T TITLE --title=TITLE            Title associated with the URL.
    -B BACKHALF --backhalf=BACKHALF   Custom back-half for the short URL.
    -O OUTFILE --outfile=OUTFILE      Output file name [default: output.csv].

Options:
  -H --help                           Show this screen.

"""
import sys
import os
import pandas as pd
from docopt import docopt
import bitlyutils as utils

# Reading Bitly access token from the file
with open(os.path.expanduser('~/.bitly'), 'r') as f:
    ACCESS_TOKEN = f.read().strip()

__version__ = '0.1.0'
__author__ = "austin"
__license__ = "MIT"

def main(args):
    if args.get('--csv'):
        df = pd.read_csv(args['--csv'])
        df.columns = [col.lower() for col in df.columns]

        results = utils.process_url_list(df.to_dict(orient='records'), ACCESS_TOKEN)
            
        df_out = pd.DataFrame(results)
        if args.get('--outfile'):
            outfile = args['--outfile']
        else:
            outfile = 'output.csv'
        df_out.to_csv(outfile, index=False, encoding='utf-8')
        sys.stdout.write(f"saved {len(df_out)} results to {outfile}")
        sys.exit(0)
    else:
        if args.get('URL'):
            url = args.get('URL')
        elif args.get('url'):
            url = args.get('url')
        else:
            sys.stdout.write(f"URL is required")
            sys.exit(1)
        title = args.get('--title')
        backhalf = args.get('--backhalf')
        result = utils.process_single_url(url, ACCESS_TOKEN, title, backhalf)
        sys.stdout.write(f"{result['short_url']}")
        sys.exit(0)

if __name__ == "__main__":
    arguments = docopt(__doc__)
    main(arguments)
